name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
  generate-docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git checkout --orphan gh-pages
      - run: git config user.name "Gurov Ivan"
      - run: git config user.email "paccomaxaivan@mail.ru"
      # Need to create a .nojekyll file to allow filenames starting with an underscore
      # to be seen on the gh-pages site. Therefore creating an empty .nojekyll file.
      # Presumably this is only needed when the SHORT_NAMES option in Doxygen is set
      # to NO, which it is by default. So creating the file just in case.
      - run: echo "" > .nojekyll
      - run: sudo apt-get install doxygen -y
      - run: sudo apt-get install graphviz
      - run: doxygen ./Doxyfile
      - run: git add ./html
      - run: git commit -a -m "Generate docs"
      - run: git push --force origin gh-pages